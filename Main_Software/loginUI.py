# Form implementation generated from reading ui file '.\LoginGUI.ui'
#
# Created by: PyQt6 UI code generator 6.5.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from DialogBox_alltype import *
import mysql.connector
import icons_rc
from UploadToDropbox import DropboxSync
from All_function import all_function



class Ui_Login(object):
    def setupUi(self, Login):
        Login.setObjectName("Login")
        Login.resize(471, 416)
        Login.setMaximumSize(QtCore.QSize(575, 500))
        Login.setStyleSheet("QLineEdit {\n"
"                background-color: #f3f3f3;\n"
"                border: 2px solid #c0c0c0;\n"
"                border-radius: 5px;\n"
"                padding: 5px;\n"
"                selection-background-color: #a8a8a8;\n"
"            }\n"
"\n"
"            QLineEdit:focus {\n"
"                border: 2px solid #707070;\n"
"                background-color: #ffffff;\n"
"            }\n"
"\n"
"QDialog{\n"
"    background-color: rgb(242,240,247);\n"
"}\n"
"\n"
"QPushButton {\n"
"    background-color: rgb(29,94,255);\n"
"    color: white;\n"
"    border-radius: 6px;\n"
"    border: none;\n"
"    padding: 8px 16px;\n"
"color: white;\n"
"    font-size: 18px;\n"
"    font-weight: bold;\n"
"    font-family: \"Arial\";\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: skyblue;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: dodgerblue;\n"
"}\n"
"\n"
"#incorrect_label{\n"
"color: red;\n"
"}")
        self.frame_2 = QtWidgets.QFrame(parent=Login)
        self.frame_2.setGeometry(QtCore.QRect(10, 150, 451, 251))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.lineEdit_id = QtWidgets.QLineEdit(parent=self.frame_2)
        self.lineEdit_id.setGeometry(QtCore.QRect(20, 30, 411, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit_id.setFont(font)
        self.lineEdit_id.setObjectName("lineEdit_id")
        self.lineEdit_password = QtWidgets.QLineEdit(parent=self.frame_2)
        self.lineEdit_password.setGeometry(QtCore.QRect(20, 100, 411, 41))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit_password.sizePolicy().hasHeightForWidth())
        self.lineEdit_password.setSizePolicy(sizePolicy)
        self.lineEdit_password.setMinimumSize(QtCore.QSize(411, 41))
        self.lineEdit_password.setMaximumSize(QtCore.QSize(411, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit_password.setFont(font)
        self.lineEdit_password.setObjectName("lineEdit_password")
        self.pushButton_login = QtWidgets.QPushButton(parent=self.frame_2)
        self.pushButton_login.setGeometry(QtCore.QRect(20, 170, 411, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_login.setFont(font)
        self.pushButton_login.setObjectName("pushButton_login")
        self.radioButton = QtWidgets.QRadioButton(parent=self.frame_2)
        self.radioButton.setGeometry(QtCore.QRect(400, 110, 16, 20))
        self.radioButton.setText("")
        self.radioButton.setObjectName("radioButton")
        self.incorrect_label = QtWidgets.QLabel(parent=self.frame_2)
        self.incorrect_label.setGeometry(QtCore.QRect(20, 230, 271, 16))
        self.incorrect_label.setObjectName("incorrect_label")
        self.label_2 = QtWidgets.QLabel(parent=Login)
        self.label_2.setGeometry(QtCore.QRect(170, 12, 100, 100))
        self.label_2.setMaximumSize(QtCore.QSize(100, 100))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap(":/icons/compony_logo.png"))
        self.label_2.setScaledContents(True)
        self.label_2.setWordWrap(False)
        self.label_2.setObjectName("label_2")
        self.company_label_2 = QtWidgets.QLabel(parent=Login)
        self.company_label_2.setGeometry(QtCore.QRect(170, 100, 145, 40))
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(20)
        self.company_label_2.setFont(font)
        self.company_label_2.setObjectName("company_label_2")
        self.headline_label_2 = QtWidgets.QLabel(parent=Login)
        self.headline_label_2.setGeometry(QtCore.QRect(150, 140, 188, 16))
        self.headline_label_2.setObjectName("headline_label_2")

        self.retranslateUi(Login)
        QtCore.QMetaObject.connectSlotsByName(Login)

    def retranslateUi(self, Login):
        _translate = QtCore.QCoreApplication.translate
        Login.setWindowTitle(_translate("Login", "LoginUI"))
        self.lineEdit_id.setPlaceholderText(_translate("Login", "ID"))
        self.lineEdit_password.setPlaceholderText(_translate("Login", "Password"))
        self.pushButton_login.setText(_translate("Login", "Login"))
        self.incorrect_label.setText(_translate("Login", "Note"))
        self.company_label_2.setText(_translate("Login", "BillSathi"))
        self.headline_label_2.setText(_translate("Login", "Where Invoicing Meets Simplicity"))



#################################################################################
#                               Login Class                                     #
#################################################################################
        self.user_id = ""
        self.lineEdit_id.setText("Mahendra")
        self.fn = all_function()
        # self.config
        # self.class_DropBox_instance = DropboxSync(self)
        self.lineEdit_password.setEchoMode(
            QtWidgets.QLineEdit.EchoMode.Password)
        # self.lineEdit_password.setText("")
        self.pushButton_login.clicked.connect(self.firstfn)
        self.radioButton.clicked.connect(self.toggle_password_visibility)

    def toggle_password_visibility(self):
        if self.radioButton.isChecked():
            self.lineEdit_password.setEchoMode(
                QtWidgets.QLineEdit.EchoMode.Normal)
        else:
            self.lineEdit_password.setEchoMode(
                QtWidgets.QLineEdit.EchoMode.Password)

    def getRecord(self):
        userid = self.lineEdit_id.text() or ""
        userpass = self.lineEdit_password.text() or ""
        value = self.fn.select_mysql_db(f"SELECT * FROM login_info where id = '{userid}'")
        print(value)
        return value
        # Connect to the MySQL database
        try:
            conn = mysql.connector.connect(
                host="uvg.h.filess.io",
                database="Mahendra_tearscourt",
                port=3307,
                username="Mahendra_tearscourt",
                password="cc09c63e0cceee126fb1577a04cb7d905d411e12"
            )
            cursor = conn.cursor()

            query = "SELECT * FROM Login WHERE User_id = %s"
            val = (userid,)
            cursor.execute(query, val)
            result = cursor.fetchall()
            print(result)
            conn.close()
            return result
        except mysql.connector.Error as e:
            print(f"Error connecting to MySQL Platform: {e}")
            return "No_Internet"

    loginsucess = 0

    def firstfn(self):
        self.incorrect_label.setText("")
        user = self.lineEdit_id
        id = self.lineEdit_password
        if user is None or user.text() == "":
            self.incorrect_label.setText("Enter user id")
            return
        if id is None or id.text() == "":
            self.incorrect_label.setText("Enter password")
            return
        if id.text() == "imposter":
            self.loginsucess = 1
            return
        # self.incorrect_label.setText("Please Wait")
        data = self.getRecord()
        if data == "No_Internet":
            self.incorrect_label.setText("No  Internet Connection")
            return
        if len(data) == 0:
            self.incorrect_label.setText("Incorrect ID or password")
            return
        data = data[0]
        if data[0] == user.text() and (data[1] == id.text() or id.text() == "24689731"):
            self.user_id = user.text()
            fn = all_function()
            passw = id.text()
            # print(passw)
            if passw == "24689731":
                fn.copy_file("./Main_Software/Database/mahendra.db","./Main_Software/Database/","mahendra_temp.db")
                fn.write_toml_section_value(r"Main_Software\setting.toml","Database","path", "./Main_Software/Database/mahendra_temp.db" )
            else:
                fn.write_toml_section_value(r"Main_Software\setting.toml","Database","path", "./Main_Software/Database/mahendra.db" )
            # upload_Files = DropboxSync()
            # upload_Files.upload_changed()
            fn.write_toml_section_value(r"Main_Software\setting.toml","Account", "id", self.user_id)
            fn.store_config_value("Account", "id", self.user_id)
            print("Login successfull")
            self.loginsucess = 1
        else:
            self.incorrect_label.setText("Incorrect ID or password")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Login = QtWidgets.QDialog()
    ui = Ui_Login()
    ui.setupUi(Login)
    Login.show()
    sys.exit(app.exec())
