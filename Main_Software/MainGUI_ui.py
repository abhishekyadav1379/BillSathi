# Form implementation generated from reading ui file 'c:\Users\mrabh\OneDrive\Desktop\Pyqt\Main_Software\MainGUI.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


import sqlite3
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import Qt

import sys
from PyQt6.QtWidgets import QApplication, QMessageBox, QMainWindow, QLabel, QWidget, QVBoxLayout, QTabWidget
from PyQt6.QtCharts import QBarCategoryAxis, QBarSeries, QBarSet, QChart, QChartView, QValueAxis
from PyQt6.QtCore import Qt, QThread, pyqtSignal, QDate, Qt
from PyQt6.QtGui import QPainter, QCursor
from All_function import all_function
from datetime import datetime
from UploadToDropbox import DropboxSync
from Chart_all import *

class UploadThread(QThread):
    finished = pyqtSignal()

    def run(self):
        self.stop_flag = False
        dropbox = DropboxSync()
        dropbox.upload_changed()
        self.finished.emit()

    def stop(self):
        self.stop_flag = True
        self.terminate()


class Func():
    def data_fetch(self):
        try:
            # Establish SQLite connection
            # mydb=sqlite3.connect('./Main_Software/Data')
            fn = all_function()
            # Fetch money details
            # money_det=mydb.cursor()
            query="SELECT DATE,SUM(GIVE),SUM(TOTAL - GIVE) AS REM,SUM(TOTAL) FROM MONEY GROUP BY DATE limit 30"
            # money_det.execute(query, )
            # money_result=money_det.fetchall()
            money_result = fn.select_db(query)
        #     print(money_result)
            return money_result
        except Exception as e:
            print("Error:", e)



class Ui_MainGUI(object):
    def setupUi(self, MainGUI):
        MainGUI.setObjectName("MainGUI")
        MainGUI.resize(1226, 741)
        MainGUI.setMaximumSize(QtCore.QSize(16777215, 16777215))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/compony_logo.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        MainGUI.setWindowIcon(icon)
        MainGUI.setStyleSheet("QWidget {\n"
"    background-color: rgb(242,240,247);\n"
"}")
        self.centralwidget = QtWidgets.QWidget(parent=MainGUI)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.tabWidget = QtWidgets.QTabWidget(parent=self.centralwidget)
        self.tabWidget.setStyleSheet("QTabWidget {\n"
"    background-color: #f2f2f2;\n"
"    border: 1px solid #cccccc;\n"
"    border-radius: 5px;\n"
"}\n"
"\n"
"QTabWidget::pane {\n"
"    border: none;\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    alignment: center;\n"
"}\n"
"\n"
"QTabBar::tab {\n"
"    background-color: #e6e6e6;\n"
"    color: #333333;\n"
"    border-top-left-radius: 5px;\n"
"    border-top-right-radius: 5px;\n"
"    padding: 8px 16px;\n"
"    margin-right: 2px;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background-color: #4e98c9;\n"
"    color: #ffffff;\n"
"}\n"
"\n"
"QTabBar::tab:hover {\n"
"    background-color: #8ac6e1;\n"
"    color: #ffffff;\n"
"}\n"
"\n"
"QTabBar::tab:!selected:hover {\n"
"    background-color: #d1d1d1;\n"
"    color: #333333;\n"
"}\n"
"\n"
"\n"
"\n"
"QTabWidget::tab-bar:top {\n"
"    top: 0px;\n"
"}\n"
"\n"
"QTabWidget::tab-bar:bottom {\n"
"    bottom: 0px;\n"
"}\n"
"\n"
"QTabWidget::tab-bar:left {\n"
"    left: 0px;\n"
"}\n"
"\n"
"QTabWidget::tab-bar:right {\n"
"    right: 0px;\n"
"}")
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.TabShape.Rounded)
        self.tabWidget.setObjectName("tabWidget")
        self.gridLayout_3.addWidget(self.tabWidget, 1, 0, 1, 1)
        self.widget_3 = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget_3.setStyleSheet("QWidget{\n"
"    background-color: #D2E9E9;\n"
"    border-radius: 5px;\n"
"    border: 2px solid black;\n"
"}\n"
"\n"
"QToolButton{\n"
"    border-radius: 10px;\n"
"    border: 2px solid black;\n"
"    background-color: white;\n"
"\n"
"    font-family: Russo One;\n"
"    font-size: 18px;\n"
"    color: #333333;\n"
"}\n"
"")
        self.widget_3.setObjectName("widget_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget_3)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.entry_btn = QtWidgets.QToolButton(parent=self.widget_3)
        self.entry_btn.setMinimumSize(QtCore.QSize(83, 0))
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(-1)
        self.entry_btn.setFont(font)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/new_entry_icon.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.entry_btn.setIcon(icon1)
        self.entry_btn.setIconSize(QtCore.QSize(50, 50))
        self.entry_btn.setToolButtonStyle(QtCore.Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.entry_btn.setObjectName("entry_btn")
        self.verticalLayout_2.addWidget(self.entry_btn)
        self.udhari_btn = QtWidgets.QToolButton(parent=self.widget_3)
        self.udhari_btn.setEnabled(True)
        self.udhari_btn.setMinimumSize(QtCore.QSize(83, 0))
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(-1)
        self.udhari_btn.setFont(font)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/icons8-ledger-67.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.udhari_btn.setIcon(icon2)
        self.udhari_btn.setIconSize(QtCore.QSize(50, 50))
        self.udhari_btn.setToolButtonStyle(QtCore.Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.udhari_btn.setObjectName("udhari_btn")
        self.verticalLayout_2.addWidget(self.udhari_btn)
        self.labour_btn = QtWidgets.QToolButton(parent=self.widget_3)
        self.labour_btn.setMinimumSize(QtCore.QSize(83, 0))
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(-1)
        self.labour_btn.setFont(font)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/labour_icon.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.labour_btn.setIcon(icon3)
        self.labour_btn.setIconSize(QtCore.QSize(50, 50))
        self.labour_btn.setToolButtonStyle(QtCore.Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.labour_btn.setObjectName("labour_btn")
        self.verticalLayout_2.addWidget(self.labour_btn)
        self.record_btn = QtWidgets.QToolButton(parent=self.widget_3)
        self.record_btn.setMinimumSize(QtCore.QSize(83, 0))
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(-1)
        self.record_btn.setFont(font)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/copywriting.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.record_btn.setIcon(icon4)
        self.record_btn.setIconSize(QtCore.QSize(50, 50))
        self.record_btn.setToolButtonStyle(QtCore.Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.record_btn.setObjectName("record_btn")
        self.verticalLayout_2.addWidget(self.record_btn)
        self.stock_btn = QtWidgets.QToolButton(parent=self.widget_3)
        self.stock_btn.setMinimumSize(QtCore.QSize(83, 0))
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(-1)
        self.stock_btn.setFont(font)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/icons8-stock-64.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.stock_btn.setIcon(icon5)
        self.stock_btn.setIconSize(QtCore.QSize(50, 50))
        self.stock_btn.setToolButtonStyle(QtCore.Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.stock_btn.setObjectName("stock_btn")
        self.verticalLayout_2.addWidget(self.stock_btn)
        self.others_btn = QtWidgets.QToolButton(parent=self.widget_3)
        self.others_btn.setMinimumSize(QtCore.QSize(83, 0))
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(-1)
        self.others_btn.setFont(font)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/other.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.others_btn.setIcon(icon6)
        self.others_btn.setIconSize(QtCore.QSize(50, 50))
        self.others_btn.setToolButtonStyle(QtCore.Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.others_btn.setObjectName("others_btn")
        self.verticalLayout_2.addWidget(self.others_btn)
        self.gridLayout_3.addWidget(self.widget_3, 1, 1, 1, 1)
        self.header = QtWidgets.QWidget(parent=self.centralwidget)
        self.header.setStyleSheet("QWidget{\n"
"    background-color: #C4DFDF;\n"
"    border: 0px solid black;\n"
"}\n"
"\n"
"")
        self.header.setObjectName("header")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.header)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.frame = QtWidgets.QFrame(parent=self.header)
        self.frame.setStyleSheet("\n"
"QToolButton{\n"
"    border-radius: 28px;\n"
"    border: 2px solid black;\n"
"    background-color: white;\n"
"    padding: 10px;\n"
"}\n"
"\n"
"QFrame {\n"
" background-color: #E3F4F4;\n"
"border-radius: 5px;\n"
"}")
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout = QtWidgets.QGridLayout(self.frame)
        self.gridLayout.setObjectName("gridLayout")
        self.setting_btn = QtWidgets.QToolButton(parent=self.frame)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/icons8-setting-64.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.setting_btn.setIcon(icon7)
        self.setting_btn.setIconSize(QtCore.QSize(30, 30))
        self.setting_btn.setObjectName("setting_btn")
        self.gridLayout.addWidget(self.setting_btn, 0, 0, 1, 1)
        self.login_btn = QtWidgets.QToolButton(parent=self.frame)
        self.login_btn.setStyleSheet("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/compony_logo.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.login_btn.setIcon(icon8)
        self.login_btn.setIconSize(QtCore.QSize(30, 30))
        self.login_btn.setObjectName("login_btn")
        self.gridLayout.addWidget(self.login_btn, 0, 1, 1, 1)
        self.gridLayout_2.addWidget(self.frame, 0, 4, 2, 1)
        self.frame_2 = QtWidgets.QFrame(parent=self.header)
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.date_label = QtWidgets.QLabel(parent=self.frame_2)
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.date_label.setFont(font)
        self.date_label.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.date_label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.date_label.setObjectName("date_label")
        self.verticalLayout.addWidget(self.date_label)
        self.time_label = QtWidgets.QLabel(parent=self.frame_2)
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.time_label.setFont(font)
        self.time_label.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.time_label.setStyleSheet("")
        self.time_label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.time_label.setObjectName("time_label")
        self.verticalLayout.addWidget(self.time_label)
        self.gridLayout_2.addWidget(self.frame_2, 0, 0, 2, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_2.addItem(spacerItem, 0, 1, 2, 1)
        self.header_label = QtWidgets.QLabel(parent=self.header)
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(26)
        font.setBold(False)
        font.setWeight(50)
        self.header_label.setFont(font)
        self.header_label.setStyleSheet("QLabel {\n"
"padding-top:10px;\n"
"}")
        self.header_label.setObjectName("header_label")
        self.gridLayout_2.addWidget(self.header_label, 0, 2, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_2.addItem(spacerItem1, 0, 3, 2, 1)
        self.label = QtWidgets.QLabel(parent=self.header)
        self.label.setStyleSheet("QLabel {\n"
"    font-family: Russo One;\n"
"    font-size: 15px;\n"
"    border : 0px;\n"
"}\n"
"")
        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 1, 2, 1, 1)
        self.gridLayout_3.addWidget(self.header, 0, 0, 1, 2)
        MainGUI.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainGUI)
        self.tabWidget.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(MainGUI)

    def retranslateUi(self, MainGUI):
        _translate = QtCore.QCoreApplication.translate
        MainGUI.setWindowTitle(_translate("MainGUI", "Mahendra Traders"))
        self.entry_btn.setText(_translate("MainGUI", "Entry"))
        self.udhari_btn.setText(_translate("MainGUI", "Udhari"))
        self.labour_btn.setText(_translate("MainGUI", "Labour"))
        self.record_btn.setText(_translate("MainGUI", "Record"))
        self.stock_btn.setText(_translate("MainGUI", "Stock"))
        self.others_btn.setText(_translate("MainGUI", "others"))
        self.setting_btn.setText(_translate("MainGUI", "Setting"))
        self.login_btn.setText(_translate("MainGUI", "Login"))
        self.date_label.setText(_translate("MainGUI", "10-09-2023"))
        self.time_label.setText(_translate("MainGUI", "10:45"))
        self.header_label.setText(_translate("MainGUI", "Mahendra Traders"))
        self.label.setText(_translate("MainGUI", "Build with confidence"))


# ---------------------Main Editing-----------------------#
        # Create the chart widget
        self.fn=all_function()
        chart_widget=TestChartWidget()
        chart_widget_Yearly=ChartWidget_Yearly()
        # chart_profit = ChartWidget_Profit()
        MainGUI.showMaximized()
        self.tabWidget.addTab(chart_widget, "Monthly Chart")
        self.tabWidget.addTab(chart_widget_Yearly, "Yearly Chart")
        # self.tabWidget.addTab(chart_profit, "Profit Chart")
        # self.tabWidget.clear()
        self.date=QtCore.QDate.currentDate()
        self.date_label.setText(self.date.toString("dd-MM-yyyy"))
        # self.time = QtCore.QTime.currentTime()
        # self.time_label.setText(self.time.toString("hh:mm:ss"))
        # self.tabWidget.addTab(chart_widget,"Daily Chart")
        self.timer=QtCore.QTimer(self)
        self.timer.timeout.connect(self.update_time)
        self.timer.start(1000)
        self.monthly_date=str(
            self.fn.read_config_value("Files", "monthly_date"))
        self.weekly_date=str(self.fn.read_config_value("Files", "weekly_date"))
        self.prev_date=str(self.fn.read_config_value("Files", "prev_date"))
        self.today_date=str(self.fn.add_days_to_date(0))
        self.update_time()
        self.upload()


    # upload file to dropbox
    def upload(self):
        # Start the upload in a separate QThread
        self.upload_thread=UploadThread()
        self.upload_thread.finished.connect(self.on_upload_finished)
        self.upload_thread.start()

    def on_upload_finished(self):
    # Handle any post-upload actions here
        print("finished")

    def update_time(self):
        current_time=QtCore.QTime.currentTime()
        time_str=current_time.toString("hh:mm:ss AP")
        self.time_label.setText(time_str)
        if self.fn.compare_dates(self.prev_date, self.today_date) == 1:
            self.fn.copy_file("./Main_Software/Database/mahendra.db",
                              "./Main_Software/DropboxStorage/local_files", "mahendra_prev.db")
            self.fn.store_config_value(
                "Files", "prev_date", self.fn.add_days_to_date(1))
            if self.fn.compare_dates(self.weekly_date, self.today_date) == 1:
                self.fn.copy_file("./Main_Software/Database/mahendra.db",
                                  "./Main_Software/DropboxStorage/local_files", "mahendra_weekly.db")
                self.fn.store_config_value(
                    "Files", "weekly_date", self.fn.add_days_to_date(7))
                if self.fn.compare_dates(self.monthly_date, self.today_date) == 1:
                    self.fn.copy_file(
                        "./Main_Software/Database/mahendra.db", "./Main_Software/DropboxStorage/local_files", "mahendra_monthly.db")
                    self.fn.store_config_value(
                        "Files", "monthly_date", self.fn.add_days_to_date(30))

    def refresh_chart(self):
        self.tabWidget.clear()
        self.tabWidget.addTab(TestChartWidget(), "Monthly Chart")
        self.tabWidget.addTab(ChartWidget_Yearly(), "Yearly Chart")
        # self.tabWidget.addTab(ChartWidget_Profit(), "Profit Chart")

    def closeEvent(self, event):
        close_popup=QMessageBox(self)
        close_popup.setIcon(QMessageBox.Icon.Question)
        close_popup.setWindowTitle('Confirm Closure')
        close_popup.setText('Are you sure you want to close?')
        close_popup.setStandardButtons(
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)

        response=close_popup.exec()

        if response == QMessageBox.StandardButton.Yes:
            event.accept()
        else:
            event.ignore()
