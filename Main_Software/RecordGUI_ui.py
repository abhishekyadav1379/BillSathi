# Form implementation generated from reading ui file 'c:\Users\mrabh\OneDrive\Desktop\Pyqt\Main_Software\RecordGUI.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtCore import QDate
from PyQt6.QtWidgets import QTableWidgetItem, QHeaderView,QTableWidget
import sqlite3
from Customer_DetailsGUI_ui import Ui_Customer_details
from All_function import TooltipDelegate,all_function

class Ui_record(object):
    def setupUi(self, record):
        record.setObjectName("record")
        record.resize(1240, 729)
        record.setStyleSheet("QLineEdit {\n"
"                background-color: #f3f3f3;\n"
"                border: 2px solid #c0c0c0;\n"
"                border-radius: 5px;\n"
"                padding: 5px;\n"
"                selection-background-color: #a8a8a8;\n"
"                font-size: 14px;\n"
"                color: red;\n"
"            }\n"
"\n"
"            QLineEdit:focus {\n"
"                border: 2px solid #707070;\n"
"                background-color: #ffffff;\n"
"            }\n"
"\n"
"QDialog{\n"
"    background-color: rgb(242,240,247);\n"
"}\n"
"QLabel {\n"
"    font-family: Russo One;\n"
"    font-size: 18px;\n"
"    border : 0px;\n"
"}\n"
"QTableWidget {\n"
"    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0,\n"
"                                      stop:0 #F7F7F7, stop:1 #E8E8E8);\n"
"    gridline-color: #DDDDDD;\n"
"    selection-background-color: #E6F1FF;\n"
"    selection-color: #333333;\n"
"\n"
"}\n"
"QTableWidget::item {\n"
"    text-align: center;\n"
"}\n"
"QTableWidget QHeaderView::section {\n"
"    background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0,\n"
"                                      stop:0 #4876AF, stop:1 #286090);\n"
"    color: white;\n"
"    font-weight: bold;\n"
"    padding: 6px;\n"
"    border: none;\n"
"    border-bottom: 1px solid #355F8C;\n"
"    border-radius: 4px;\n"
"}\n"
"\n"
"QTableWidget QHeaderView::section:second {\n"
"    border-top-right-radius: 24px;\n"
"}\n"
"\n"
"QTableWidget::item:selected {\n"
"    background-color: #B3D7FF;\n"
"    color: #333333;\n"
"}\n"
"QTableWidget QHeaderView::section:pressed {\n"
"    background-color: #4F8BC9;\n"
"}\n"
"\n"
"\n"
"\n"
"QTableWidget::item:hover {\n"
"    background-color: #E6F1FF;\n"
"}")
        self.verticalLayout = QtWidgets.QVBoxLayout(record)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(parent=record)
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.prod_det_label = QtWidgets.QLabel(parent=self.frame)
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(-1)
        self.prod_det_label.setFont(font)
        self.prod_det_label.setObjectName("prod_det_label")
        self.horizontalLayout_2.addWidget(self.prod_det_label)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.dateEdit = QtWidgets.QDateEdit(parent=self.frame)
        self.dateEdit.setStyleSheet("QDateEdit {\n"
"  background-color: rgb(213, 202, 255);\n"
"  border: 1px solid #dcdcdc;\n"
"  border-radius: 4px;\n"
"  selection-background-color: rgb(215, 192, 255);\n"
"  selection-color: #333333;\n"
"  font-size: 16px;\n"
"  color: #333333;\n"
"}\n"
"")
        self.dateEdit.setObjectName("dateEdit")
        self.horizontalLayout_2.addWidget(self.dateEdit)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem2)
        self.cash_flow_label = QtWidgets.QLabel(parent=self.frame)
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(-1)
        self.cash_flow_label.setFont(font)
        self.cash_flow_label.setObjectName("cash_flow_label")
        self.horizontalLayout_2.addWidget(self.cash_flow_label)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem3)
        self.verticalLayout.addWidget(self.frame)
        self.frame_2 = QtWidgets.QFrame(parent=record)
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.tableWidget_product = QtWidgets.QTableWidget(parent=self.frame_2)
        self.tableWidget_product.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.AnyKeyPressed|QtWidgets.QAbstractItemView.EditTrigger.DoubleClicked)
        self.tableWidget_product.setObjectName("tableWidget_product")
        self.tableWidget_product.setColumnCount(6)
        self.tableWidget_product.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_product.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_product.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_product.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_product.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_product.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_product.setHorizontalHeaderItem(5, item)
        self.horizontalLayout_3.addWidget(self.tableWidget_product)
        self.tableWidget_money = QtWidgets.QTableWidget(parent=self.frame_2)
        self.tableWidget_money.setObjectName("tableWidget_money")
        self.tableWidget_money.setColumnCount(6)
        self.tableWidget_money.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_money.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_money.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_money.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_money.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_money.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_money.setHorizontalHeaderItem(5, item)
        self.horizontalLayout_3.addWidget(self.tableWidget_money)
        self.verticalLayout.addWidget(self.frame_2)
        self.frame_3 = QtWidgets.QFrame(parent=record)
        self.frame_3.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem4)
        self.total_label = QtWidgets.QLabel(parent=self.frame_3)
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(-1)
        self.total_label.setFont(font)
        self.total_label.setObjectName("total_label")
        self.horizontalLayout.addWidget(self.total_label)
        self.lineEdit_total = QtWidgets.QLineEdit(parent=self.frame_3)
        self.lineEdit_total.setReadOnly(True)
        self.lineEdit_total.setObjectName("lineEdit_total")
        self.horizontalLayout.addWidget(self.lineEdit_total)
        self.total_cash_label = QtWidgets.QLabel(parent=self.frame_3)
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(-1)
        self.total_cash_label.setFont(font)
        self.total_cash_label.setObjectName("total_cash_label")
        self.horizontalLayout.addWidget(self.total_cash_label)
        self.lineEdit_total_cash = QtWidgets.QLineEdit(parent=self.frame_3)
        self.lineEdit_total_cash.setReadOnly(True)
        self.lineEdit_total_cash.setObjectName("lineEdit_total_cash")
        self.horizontalLayout.addWidget(self.lineEdit_total_cash)
        self.total_udhari_label = QtWidgets.QLabel(parent=self.frame_3)
        font = QtGui.QFont()
        font.setFamily("Russo One")
        font.setPointSize(-1)
        self.total_udhari_label.setFont(font)
        self.total_udhari_label.setObjectName("total_udhari_label")
        self.horizontalLayout.addWidget(self.total_udhari_label)
        self.lineEdit_total_udhari = QtWidgets.QLineEdit(parent=self.frame_3)
        self.lineEdit_total_udhari.setReadOnly(True)
        self.lineEdit_total_udhari.setObjectName("lineEdit_total_udhari")
        self.horizontalLayout.addWidget(self.lineEdit_total_udhari)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem5)
        self.verticalLayout.addWidget(self.frame_3)

        self.retranslateUi(record)
        QtCore.QMetaObject.connectSlotsByName(record)

    def retranslateUi(self, record):
        _translate = QtCore.QCoreApplication.translate
        record.setWindowTitle(_translate("record", "Daily Record"))
        self.prod_det_label.setText(_translate("record", "Product Details"))
        self.cash_flow_label.setText(_translate("record", "Cash Flow Details"))
        item = self.tableWidget_product.horizontalHeaderItem(0)
        item.setText(_translate("record", "ID"))
        item = self.tableWidget_product.horizontalHeaderItem(1)
        item.setText(_translate("record", "Name"))
        item = self.tableWidget_product.horizontalHeaderItem(2)
        item.setText(_translate("record", "Description"))
        item = self.tableWidget_product.horizontalHeaderItem(3)
        item.setText(_translate("record", "Quantity"))
        item = self.tableWidget_product.horizontalHeaderItem(4)
        item.setText(_translate("record", "Rate"))
        item = self.tableWidget_product.horizontalHeaderItem(5)
        item.setText(_translate("record", "Value"))
        item = self.tableWidget_money.horizontalHeaderItem(0)
        item.setText(_translate("record", "ID"))
        item = self.tableWidget_money.horizontalHeaderItem(1)
        item.setText(_translate("record", "Name"))
        item = self.tableWidget_money.horizontalHeaderItem(2)
        item.setText(_translate("record", "Received"))
        item = self.tableWidget_money.horizontalHeaderItem(3)
        item.setText(_translate("record", "Total"))
        item = self.tableWidget_money.horizontalHeaderItem(4)
        item.setText(_translate("record", "Method"))
        item = self.tableWidget_money.horizontalHeaderItem(5)
        item.setText(_translate("record", "Time"))
        self.total_label.setText(_translate("record", "Total Sale: ₹"))
        self.total_cash_label.setText(_translate("record", "Received: ₹"))
        self.total_udhari_label.setText(_translate("record", "Total Udhari: ₹"))



#----------------------------Working Area---------------------------#
        record.showMaximized()

        self.dateEdit.setDate(QDate.currentDate())
        self.updatedate = self.dateEdit.date().toString("yyyy-MM-dd")
        self.Daily_Record()
        self.dateEdit.dateChanged.connect(self.on_date_changed)
        font = QtGui.QFont()
        font.setPointSize(11) 
        self.tableWidget_money.setFont(font)
        self.tableWidget_product.setFont(font)
        self.tableWidget_money.setAlternatingRowColors(True)  # Enable alternating row colors
        self.tableWidget_product.setAlternatingRowColors(True)  # Enable alternating row colors
        # Set the background color for alternating rows
        self.tableWidget_money.setStyleSheet("QTableView::item:alternate { background-color: #c5edea; }")
        self.tableWidget_product.setStyleSheet("QTableView::item:alternate { background-color: #c5edea; }")
        self.tableWidget_money.itemDoubleClicked.connect(self.go_to_customer)
        self.delegate = TooltipDelegate()
        self.tableWidget_money.setItemDelegate(self.delegate)
        self.tableWidget_product.setItemDelegate(self.delegate)
        
    def go_to_customer(self, item):
        row = item.row()
        id = self.tableWidget_money.item(row, 0).text()
        # cust = Ui_Customer_Details()
        # cust.update_data(id)
        self.customer_dialog = QtWidgets.QDialog()
        self.customer_details_ui = Ui_Customer_details(self.customer_dialog)
        self.customer_details_ui.setupUi(self.customer_dialog)
        self.customer_details_ui.update_data(id)
        self.customer_dialog.exec()
        # self.cust = Ui_Customer_details()
        # self.cust.update_data(id)
        
        
    def on_date_changed(self):
        # print("hi")
        self.updatedate = self.dateEdit.date().toString("yyyy-MM-dd")
        # print(self.updatedate)
        self.Daily_Record()    
            
    def Daily_Record(self, combo_value=None, value=None):
        try:
            # Establish SQLite connection
            self.tableWidget_money.clearContents()
            self.tableWidget_product.clearContents()

            date = self.updatedate
            # print(date)
            fn = all_function()
            # mydb = sqlite3.connect('./Main_Software/mahendra.db')
            # mycursor = mydb.cursor()
            
            query1 = f"SELECT SUM(TOTAL) FROM MONEY where date = '{date}'"
            # mycursor.execute(query1)
            # total = mycursor.fetchone()[0]
            total = fn.select_db(query1)[0][0]
            
            query2 = f"SELECT SUM(give) FROM MONEY where date = '{date}'"
            # mycursor.execute(query2)
            # tot_cash = mycursor.fetchone()[0]
            tot_cash = fn.select_db(query2)[0][0]
            
            query3 = f'''select sum(tot) as new_tot from (select sum(total - give) as tot FROM Money 
                            where id in (select id FROM Money where method IN ('Udhar','Jma','UPI','Cheque') 
                            and date = '{date}' and Total > 0) and date = '{date}' group by id) where tot>0 '''
            # mycursor.execute(query3)
            # tot_udhari = mycursor.fetchone()[0]
            tot_udhari = fn.select_db(query3)[0][0]

            # print("sum of al ",total,tot_cash,tot_udhari)
            self.lineEdit_total.setText(str(total))
            self.lineEdit_total_cash.setText(str(tot_cash))
            self.lineEdit_total_udhari.setText(str(tot_udhari))
            
            #Fetch detials of Product
            query = f'''SELECT Id,name, prod,quantity,rate,value FROM Product where date = '{date}' order by time'''
            # det = (value + '%',)
            # mycursor.execute(query)

            # result = mycursor.fetchall()
            result = fn.select_db(query)
            self.tableWidget_product.setRowCount(0)
            self.tableWidget_money.setRowCount(0)
            for row_number, row_data in enumerate(result):
                self.tableWidget_product.insertRow(row_number)

                for column_number, data in enumerate(row_data):
                    self.tableWidget_product.setItem(row_number, column_number, QTableWidgetItem(str(data)))

            # Money details of the customer
            # money_det = mydb.cursor()
            money_query = f'''SELECT ID,Name,Give,Total, Method,CASE
        WHEN CAST(strftime('%H', time) AS INTEGER) >= 12 THEN
            CASE
                WHEN CAST(strftime('%H', time) AS INTEGER) > 12 THEN
                    printf('%02d', CAST(strftime('%H', time) AS INTEGER) - 12)
                ELSE
                    '12'
            END || ':' || 
            strftime('%M:%S', time) || ' PM'
        ELSE
            time || ' AM'
    END AS converted_time from Money where date = '{date}' order by time
                                '''
            # money_val = (cust_id,)
            # money_det.execute(money_query)
            # money_result = money_det.fetchall()
            money_result = fn.select_db(money_query)
            for row_number, row_data in enumerate(money_result):
                self.tableWidget_money.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    # print(data)
                    self.tableWidget_money.setItem(row_number, column_number, QTableWidgetItem(str(data)))
            # self.tableWidget_product.resizeColumnToContents(1)
            self.tableWidget_product.setColumnWidth(1, 200) 
            self.tableWidget_money.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeMode.Stretch)
            self.tableWidget_product.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeMode.Stretch)
            
            self.tableWidget_product.setEditTriggers(QTableWidget.EditTrigger.NoEditTriggers)
            self.tableWidget_money.setEditTriggers(QTableWidget.EditTrigger.NoEditTriggers)
        except Exception as e:
            print("Error:", e)



#--------------working area-------------#
        